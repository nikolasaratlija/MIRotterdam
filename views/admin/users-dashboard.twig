{% extends 'base/layout.twig' %}

{% block body %}

    {% include 'admin/sidebar.twig' %}

    <div class="container">
        <h2>Gebruikers</h2>

        <p>Klik op de knop om een gebruiker toe te voegen.</p>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-success mb-2" data-bs-toggle="modal" data-bs-target="#gebruikerModal">
            Gebruiker toevoegen
        </button>
        <br>

        <p>Hier vindt u een overzicht van de gebruikers:</p>

        <p class="d-none text-danger" id="fout">Fout, de gebruiker is niet verwijderd!</p>

        <div id="gebruikersDiv"></div>

        <!-- Modal for adding a user -->
        <div class="modal fade" id="gebruikerModal" tabindex="-1" role="dialog" aria-labelledby="gebruikerModal"
             aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Gebruiker toevoegen</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">


                        <p>Hieronder kunt u een gebruiker toevoegen.<br></p>
                        <div class="form-group">
                            <label for="naam" class="col-form-label">Gebruikersnaam: </label>
                            <input type="text" name="naam" id="naam" placeholder="Elisa" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="email" class="col-form-label">Email: </label><br>
                            <input type="text" name="email" placeholder="voorbeeld@gmail.com" class="form-control"
                                   id="email" required>
                        </div>
                        <div class="form-group">
                            <label for="wachtwoord1" class="col-form-label">Wachtwoord: </label><br>
                            <input type="password" id="wachtwoord1" name="wachtwoord1" placeholder="wachtwoord"
                                   class="form-control" required>
                            <input type="checkbox" onclick="showPass('wachtwoord1')" id="checkpass">
                            <label for="checkpass" class="col-form-label">Toon wachtwoord</label><br>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Toevoegen" name="addUser" id="addUser" class="form-control"
                                   style="background-color: #198754;color: white;"><br>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Sluiten</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>

        //Eventlistener for button in the modal, registers a click on the button.
        document.getElementById('addUser').addEventListener('click', () => {

            //Creates JSON data with the data filled in, in the form.
            const data = {
                'naam': document.getElementById('naam').value,
                'email': document.getElementById('email').value,
                'wachtwoord1': document.getElementById('wachtwoord1').value
            }

            //Fetch function with post method to the api, this is to add a user to database.
            //JSON data is given in the body.
            fetch('/api/users',
                {
                    method: "post",
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(data)
                }
            ).then(data => data.json()) //Convert the retrieved data to JSON format.
                .then(json => {
                    if (json.data === false) {
                        //Data is false, user is not added to database, give alert.
                        alert("Gebruiker is niet toegevoegd!")
                    } else {
                        //User is added to database, refreshes the page.
                        window.location.href = '/admin/gebruikers'
                    }
                })
        })

        //Fetch function to show all users on the page.
        fetch('/api/users') //Fetch retrieves the users data from api.
            .then(result => result.json()) //Convert the retrieved data to JSON format.
            .then(json => toonOpDashboard(json)) //Call function to show the JSON data on the page.

        //Function to delete a user from database.
        function deleteUser (userID){
            fetch(`/api/users/${userID}`, {
                method: "delete"
            }) //Call the delete method form api, with userid in the URL.
                .then(data => data.json()) //Convert the retrieved data to JSON format.
                .then(json => {
                    if (json.data === false) {
                        //User is not deleted, Show the error message on the page.
                        document.getElementById('fout').classList.remove('d-none') //Removes the class d-none to show message on page.
                    } else {
                        //User is deleted, refreshes the page.
                        window.location.href = '/admin/gebruikers'
                    }
                })
        }

        //Function to show all the user on the page in a HTML table.
        function toonOpDashboard(gebruikers) {
            let locatiesHTML = "<table class='table' ><tr><th scope='col'>ID:</th><th scope='col'>Gebruikersnaam:</th><th scope='col'>Email:</th><th scope='col'>Wachtwoord:</th><th scope='col'>Verwijderen:</th></tr>"   //variabel to put all the html in.

            gebruikers.forEach(gebruiker => { //loop over all users.
                //Creates a new HTML element table with all user data.
                locatiesHTML += `
                <tr><td>${gebruiker.id}</td><td>${gebruiker.Gebruikersnaam}</td><td>${gebruiker.email}</td><td>${gebruiker.Wachtwoord}</td><td><a class='btn btn-md btn-danger' type="submit" onclick="deleteUser(${gebruiker.id})" id="verwijderBtn">Verwijderen</a></td></tr>
            `
            })

            //Adds the created table to a div on the page by id.
            document.getElementById('gebruikersDiv').innerHTML += locatiesHTML
        }

        //Function to show a password by given element id.
        function showPass($id) {
            var x = document.getElementById($id); //Get the element by id.
            if (x.type === "password") { //Check the type of element. If password then change to text to show.
                x.type = "text";
            } else { //If the type is text then change it back to password.
                x.type = "password";
            }
        }
    </script>

{% endblock %}